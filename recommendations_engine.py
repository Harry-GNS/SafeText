"""
Sistema de Recomendaciones Inteligentes para SafeText
Generador de recomendaciones personalizadas basadas en el an√°lisis de ciberacoso
"""

class RecommendationsEngine:
    def __init__(self):
        self.recommendations_bank = {
            # Recomendaciones para contenido seguro
            "safe": [
                {
                    "id": "safe_001",
                    "icon": "‚úÖ",
                    "title": "Contenido Apropiado Detectado",
                    "description": "El texto analizado muestra una comunicaci√≥n respetuosa y apropiada.",
                    "action": "Contin√∫e promoviendo este tipo de comunicaci√≥n positiva en el entorno digital.",
                    "priority": 1
                },
                {
                    "id": "safe_002", 
                    "icon": "üõ°Ô∏è",
                    "title": "Ambiente Digital Saludable",
                    "description": "No se detectaron signos de hostigamiento o intimidaci√≥n.",
                    "action": "Mantenga las buenas pr√°cticas de comunicaci√≥n establecidas y fomente el respeto mutuo.",
                    "priority": 1
                },
                {
                    "id": "safe_003",
                    "icon": "üìö",
                    "title": "Prevenci√≥n Continua",
                    "description": "Aunque el contenido es seguro, la prevenci√≥n es clave.",
                    "action": "Implemente programas regulares de concientizaci√≥n sobre ciberacoso y comunicaci√≥n digital responsable.",
                    "priority": 2
                }
            ],
            
            # Recomendaciones por categor√≠as de patrones
            "categories": {
                "Insultos y Ofensas": [
                    {
                        "id": "insult_001",
                        "icon": "‚ö†Ô∏è",
                        "title": "Lenguaje Ofensivo Detectado",
                        "description": "Se han identificado insultos o palabras ofensivas en el texto.",
                        "action": "Implemente sesiones de educaci√≥n sobre comunicaci√≥n respetuosa y establezca consecuencias claras para el lenguaje inapropiado.",
                        "priority": 2
                    },
                    {
                        "id": "insult_002",
                        "icon": "üí¨",
                        "title": "Intervenci√≥n Comunicativa",
                        "description": "El uso de insultos puede escalar a formas m√°s severas de acoso.",
                        "action": "Facilite un di√°logo constructivo entre las partes involucradas para resolver conflictos de manera pac√≠fica.",
                        "priority": 1
                    }
                ],
                "Amenazas": [
                    {
                        "id": "threat_001",
                        "icon": "üö®",
                        "title": "Amenazas Identificadas - Acci√≥n Inmediata",
                        "description": "Se detectaron amenazas que requieren intervenci√≥n urgente.",
                        "action": "Contacte inmediatamente a las autoridades escolares y considere involucrar a los padres o tutores.",
                        "priority": 1
                    },
                    {
                        "id": "threat_002",
                        "icon": "üìã",
                        "title": "Documentaci√≥n de Evidencia",
                        "description": "Las amenazas deben ser documentadas adecuadamente.",
                        "action": "Preserve todas las evidencias digitales y elabore un reporte detallado del incidente.",
                        "priority": 2
                    }
                ],
                "Exclusi√≥n Social": [
                    {
                        "id": "exclusion_001",
                        "icon": "üë•",
                        "title": "Patrones de Exclusi√≥n Detectados",
                        "description": "Se identificaron comportamientos que buscan aislar o excluir a la v√≠ctima.",
                        "action": "Promueva actividades de integraci√≥n grupal y fortalezca la cohesi√≥n social en el entorno.",
                        "priority": 2
                    },
                    {
                        "id": "exclusion_002",
                        "icon": "ü§ù",
                        "title": "Fomento de Inclusi√≥n",
                        "description": "La exclusi√≥n social puede tener efectos psicol√≥gicos duraderos.",
                        "action": "Implemente programas de mentor√≠as entre pares y actividades colaborativas.",
                        "priority": 1
                    }
                ],
                "Acoso Sexual": [
                    {
                        "id": "sexual_001",
                        "icon": "üî¥",
                        "title": "Contenido de Naturaleza Sexual Detectado",
                        "description": "Se han identificado patrones de acoso sexual que requieren acci√≥n inmediata.",
                        "action": "Contacte inmediatamente a las autoridades competentes y proporcione apoyo psicol√≥gico a la v√≠ctima.",
                        "priority": 1
                    },
                    {
                        "id": "sexual_002",
                        "icon": "üõ°Ô∏è",
                        "title": "Medidas de Protecci√≥n Urgentes",
                        "description": "El acoso sexual requiere medidas de protecci√≥n inmediatas.",
                        "action": "Implemente medidas de protecci√≥n para la v√≠ctima y considere la suspensi√≥n temporal del agresor.",
                        "priority": 1
                    }
                ]
            },
            
            # Recomendaciones por nivel de severidad
            "severity": {
                "Low": [
                    {
                        "id": "low_001",
                        "icon": "üëÄ",
                        "title": "Monitoreo Preventivo",
                        "description": "Nivel de riesgo bajo, pero requiere seguimiento.",
                        "action": "Establezca un monitoreo discreto y eduque sobre comunicaci√≥n digital apropiada.",
                        "priority": 1
                    },
                    {
                        "id": "low_002",
                        "icon": "üìñ",
                        "title": "Educaci√≥n Temprana",
                        "description": "La intervenci√≥n temprana previene la escalaci√≥n.",
                        "action": "Organice talleres sobre netiqueta y comunicaci√≥n respetuosa en l√≠nea.",
                        "priority": 2
                    }
                ],
                "Medium": [
                    {
                        "id": "medium_001",
                        "icon": "‚ö†Ô∏è",
                        "title": "Intervenci√≥n Necesaria",
                        "description": "Riesgo moderado que requiere atenci√≥n activa.",
                        "action": "Convoque a una reuni√≥n con todas las partes involucradas para abordar la situaci√≥n.",
                        "priority": 1
                    },
                    {
                        "id": "medium_002",
                        "icon": "üìù",
                        "title": "Plan de Acci√≥n Estructurado",
                        "description": "Desarrolle un plan de intervenci√≥n espec√≠fico.",
                        "action": "Cree un plan de seguimiento con objetivos claros y plazos definidos.",
                        "priority": 2
                    }
                ],
                "High": [
                    {
                        "id": "high_001",
                        "icon": "üö®",
                        "title": "Acci√≥n Inmediata Requerida",
                        "description": "Alto riesgo que demanda intervenci√≥n urgente.",
                        "action": "Contacte inmediatamente a los padres, autoridades escolares y considere apoyo psicol√≥gico.",
                        "priority": 1
                    },
                    {
                        "id": "high_002",
                        "icon": "üè•",
                        "title": "Apoyo Profesional",
                        "description": "La situaci√≥n requiere intervenci√≥n de profesionales.",
                        "action": "Derive a la v√≠ctima a servicios de apoyo psicol√≥gico y considere medidas disciplinarias.",
                        "priority": 1
                    }
                ],
                "Critical": [
                    {
                        "id": "critical_001",
                        "icon": "üÜò",
                        "title": "Emergencia - Contactar Autoridades",
                        "description": "Situaci√≥n cr√≠tica que requiere intervenci√≥n inmediata de autoridades.",
                        "action": "Contacte inmediatamente a las autoridades competentes y preserve toda la evidencia digital.",
                        "priority": 1
                    },
                    {
                        "id": "critical_002",
                        "icon": "üöë",
                        "title": "Apoyo de Emergencia",
                        "description": "La v√≠ctima necesita apoyo inmediato y protecci√≥n.",
                        "action": "Proporcione apoyo de emergencia a la v√≠ctima y considere medidas de protecci√≥n inmediatas.",
                        "priority": 1
                    }
                ]
            },
            
            # Recomendaciones generales por contexto
            "general": [
                {
                    "id": "general_001",
                    "icon": "üë®‚Äçüë©‚Äçüëß‚Äçüë¶",
                    "title": "Involucrar a la Familia",
                    "description": "La colaboraci√≥n familiar es clave en la prevenci√≥n del ciberacoso.",
                    "action": "Organice sesiones informativas para padres sobre ciberacoso y seguridad digital.",
                    "priority": 2
                },
                {
                    "id": "general_002",
                    "icon": "üîÑ",
                    "title": "Seguimiento Continuo",
                    "description": "El monitoreo regular previene la recurrencia de patrones problem√°ticos.",
                    "action": "Establezca un sistema de seguimiento regular para evaluar la efectividad de las medidas.",
                    "priority": 2
                }
            ]
        }

    def _get_fallback_recommendation(self):
        """Recomendaci√≥n de respaldo"""
        return {
            'id': 'fallback_education',
            'icon': 'üìö',
            'title': 'Educaci√≥n y Prevenci√≥n',
            'description': 'La educaci√≥n continua es la mejor herramienta para prevenir el ciberacoso.',
            'action': 'Implemente programas de concientizaci√≥n sobre comunicaci√≥n digital responsable y respeto en l√≠nea.',
            'priority': 1
        }

    def generate_recommendations(self, analysis_result):
        """
        Genera recomendaciones inteligentes basadas en el resultado del an√°lisis
        
        Args:
            analysis_result (dict): Resultado del an√°lisis de ciberacoso
            
        Returns:
            dict: Recomendaci√≥n principal seleccionada
        """
        try:
            print(f"DEBUG: An√°lisis recibido: {analysis_result}")  # Debug
            
            # Verificar si es ciberacoso
            is_cyberbullying = analysis_result.get('is_cyberbullying', False)
            
            if not is_cyberbullying:
                # Contenido seguro - seleccionar recomendaci√≥n de seguridad
                safe_recommendations = self.recommendations_bank.get('safe', [])
                if safe_recommendations:
                    main_recommendation = safe_recommendations[0]  # Primera recomendaci√≥n de seguridad
                    print(f"DEBUG: Seleccionada recomendaci√≥n de contenido seguro: {main_recommendation['title']}")
                else:
                    main_recommendation = self._get_fallback_recommendation()
            else:
                # Contenido problem√°tico - l√≥gica inteligente de selecci√≥n
                candidates = []
                
                # 1. Priorizar por severidad del riesgo
                risk_level = analysis_result.get('risk_level', 'Low')
                print(f"DEBUG: Nivel de riesgo: {risk_level}")
                
                severity_recs = self.recommendations_bank['severity'].get(risk_level, [])
                if severity_recs:
                    candidates.extend(severity_recs)
                    print(f"DEBUG: Agregadas {len(severity_recs)} recomendaciones por severidad")
                
                # 2. Agregar recomendaciones espec√≠ficas por categor√≠a detectada
                if analysis_result.get('matches'):
                    categories_found = list(set([
                        match.get('pattern_info', {}).get('category', '')
                        for match in analysis_result['matches']
                        if match.get('pattern_info', {}).get('category')
                    ]))
                    
                    print(f"DEBUG: Categor√≠as encontradas: {categories_found}")
                    
                    for category in categories_found:
                        category_recs = self.recommendations_bank['categories'].get(category, [])
                        if category_recs:
                            candidates.extend(category_recs)
                            print(f"DEBUG: Agregadas recomendaciones para categor√≠a '{category}': {len(category_recs)}")
                
                # 3. Seleccionar la mejor recomendaci√≥n
                if candidates:
                    # Priorizar por: 1) Prioridad m√°s alta (n√∫mero menor), 2) Categor√≠a espec√≠fica sobre severidad general
                    best_recommendation = min(candidates, key=lambda x: (x['priority'], 0 if x['id'].startswith(('threat_', 'sexual_', 'insult_', 'exclusion_')) else 1))
                    main_recommendation = best_recommendation
                    print(f"DEBUG: Mejor recomendaci√≥n seleccionada: {main_recommendation['title']}")
                else:
                    print("DEBUG: No se encontraron candidatos, usando fallback")
                    main_recommendation = self._get_fallback_recommendation()
            
            return {
                'main_recommendation': main_recommendation
            }
            
        except Exception as e:
            print(f"Error generando recomendaciones: {e}")
            return {
                'main_recommendation': self._get_fallback_recommendation()
            }

    def _select_recommendations_by_type(self, rec_type, count):
        """Selecciona recomendaciones por tipo"""
        recommendations = self.recommendations_bank.get(rec_type, [])
        return recommendations[:count]

    def _select_recommendations_by_severity(self, severity, count):
        """Selecciona recomendaciones por nivel de severidad"""
        recommendations = self.recommendations_bank['severity'].get(
            severity, 
            self.recommendations_bank['severity']['Low']
        )
        return recommendations[:count]

    def _select_recommendations_by_category(self, category, count):
        """Selecciona recomendaciones por categor√≠a de patr√≥n"""
        recommendations = self.recommendations_bank['categories'].get(category, [])
        return recommendations[:count]

    def get_all_recommendations(self):
        """Retorna todas las recomendaciones disponibles (para prop√≥sitos de debugging)"""
        return self.recommendations_bank


# Funci√≥n para usar desde el backend
def get_recommendations_for_analysis(analysis_result):
    """
    Funci√≥n simplificada para obtener recomendaciones b√°sicas seg√∫n el nivel de riesgo
    
    Args:
        analysis_result (dict): Resultado del an√°lisis de ciberacoso
        
    Returns:
        dict: Respuesta con la recomendaci√≥n seg√∫n el nivel de riesgo
    """
    try:
        # Determinar nivel de riesgo
        is_cyberbullying = analysis_result.get('is_cyberbullying', False)
        risk_level = analysis_result.get('risk_level', 'Low')
        
        # 3 recomendaciones b√°sicas seg√∫n el nivel de riesgo
        if not is_cyberbullying or risk_level == 'Low':
            # SEGURO - Nivel bajo o sin ciberacoso
            recommendation = {
                "id": "safe_basic",
                "icon": "‚úÖ",
                "title": "Contenido Seguro",
                "description": "El texto analizado muestra una comunicaci√≥n apropiada y respetuosa.",
                "action": "Contin√∫e promoviendo este tipo de comunicaci√≥n positiva en el entorno digital. Mantenga las buenas pr√°cticas establecidas.",
                "priority": 1
            }
        elif risk_level == 'Medium':
            # MEDIO - Nivel medio de riesgo
            recommendation = {
                "id": "medium_basic",
                "icon": "‚ö†Ô∏è",
                "title": "Atenci√≥n Requerida",
                "description": "Se detectaron elementos que requieren supervisi√≥n moderada.",
                "action": "Implemente medidas preventivas como sesiones de educaci√≥n sobre comunicaci√≥n respetuosa. Monitoree la situaci√≥n de cerca.",
                "priority": 2
            }
        else:
            # PELIGROSO - Nivel alto o muy alto
            recommendation = {
                "id": "danger_basic",
                "icon": "üö®",
                "title": "Situaci√≥n Cr√≠tica",
                "description": "Se detect√≥ contenido altamente problem√°tico que requiere intervenci√≥n inmediata.",
                "action": "Tome medidas urgentes: documente la evidencia, notifique a las autoridades competentes y proporcione apoyo inmediato a la v√≠ctima.",
                "priority": 1
            }
        
        return {
            "success": True,
            "recommendation": recommendation
        }
        
    except Exception as e:
        # Recomendaci√≥n de respaldo
        fallback_recommendation = {
            "id": "fallback_basic",
            "icon": "üìö",
            "title": "Educaci√≥n y Prevenci√≥n",
            "description": "La educaci√≥n continua es la mejor herramienta para prevenir el ciberacoso.",
            "action": "Implemente programas de concientizaci√≥n sobre comunicaci√≥n digital responsable y respeto en l√≠nea.",
            "priority": 1
        }
        
        return {
            "success": False,
            "error": str(e),
            "recommendation": fallback_recommendation
        }


if __name__ == "__main__":
    # Ejemplo de uso para testing
    test_analysis = {
        "is_cyberbullying": True,
        "risk_level": "High",
        "total_patterns_found": 2,
        "total_matches": 3,
        "matches": [
            {
                "pattern_info": {
                    "category": "Amenazas",
                    "severity": "High"
                }
            },
            {
                "pattern_info": {
                    "category": "Insultos y Ofensas", 
                    "severity": "Medium"
                }
            }
        ]
    }
    
    result = get_recommendations_for_analysis(test_analysis)
    print("Resultado del test:")
    print(f"√âxito: {result['success']}")
    
    if result['recommendation']:
        rec = result['recommendation']
        print(f"\nRecomendaci√≥n seleccionada:")
        print(f"  T√≠tulo: {rec['title']}")
        print(f"  Prioridad: {rec['priority']}")
        print(f"  Descripci√≥n: {rec['description']}")
        print(f"  Acci√≥n: {rec['action']}")
